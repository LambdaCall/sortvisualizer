{"version":3,"sources":["visualizer/sortingAlgorithms/algorithms.tsx","visualizer/visualizerComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["quickSort","arr","low","high","animation","runQuickSort","p","index","Math","floor","pivot","i","j","step","bar1","bar2","swap","bars","push","temp","partition","VisualizerComponent","props","settings","maxValue","minValue","arraySize","barColor","activeBarColor","animationSpeed","resetArray","state","timeouts","length","clearTimeout","shift","resetBars","setState","array","randomizeArray","isSorted","arraybars","document","getElementsByClassName","style","backgroundColor","runAlgorithm","algorithm","copy","runAnimation","newArray","this","random","prevBar1","prevBar2","setTimeout","forEach","barID","idx","undefined","toString","list","pColor","className","map","val","key","id","height","disabled","onClick","swapped","bubbleSort","insertionSort","min","z","selectionSort","pos","gnomeSort","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51b190dd.chunk.js","sourcesContent":["import {animationStep} from '../visualizerComponent'\r\n\r\n\r\n\r\n// -------------------------------------------------------------------------------------------\r\nexport function bubbleSort(arr : number[]){\r\n    var animation : animationStep [] = [];\r\n    let swapped;\r\n    do{\r\n        swapped = false;\r\n        for(let i = 0; i < arr.length-1; i++){\r\n            let step = {bar1 : i, bar2 : i+1 ,swap : 0, bars : [i,i+1]};\r\n            if(arr[i] > arr[i+1]){\r\n                step.swap = 1;\r\n                let temp = arr[i];\r\n                arr[i] = arr[i+1];\r\n                arr[i+1] = temp;\r\n                swapped = true;\r\n            }\r\n            animation.push(step);\r\n        }\r\n    }while(swapped)\r\n\r\n    return animation;\r\n}\r\n// -------------------------------------------------------------------------------------------\r\n\r\n//https://en.wikipedia.org/wiki/Insertion_sort\r\n// -------------------------------------------------------------------------------------------\r\nexport function insertionSort(arr:number[]){\r\n    var animation : animationStep [] = [];\r\n\r\n    let idx = 1;\r\n    while (idx < arr.length){\r\n        let j = idx;\r\n        while(j > 0 && arr[j-1] > arr[j]){\r\n            let temp = arr[j];\r\n            arr[j] = arr[j-1];\r\n            arr[j-1] = temp;\r\n            let step = {bar1 : j, bar2 : j-1 ,swap : 1, bars : [j,j-1]};\r\n            animation.push(step)\r\n            j--;\r\n        }\r\n        idx++;\r\n    }\r\n    return animation;\r\n}\r\n// -------------------------------------------------------------------------------------------\r\n\r\n//https://en.wikipedia.org/wiki/Selection_sort\r\n// -------------------------------------------------------------------------------------------\r\nexport function selectionSort(arr:number[]){\r\n    var animation : animationStep [] = [];\r\n\r\n    for(let i = 0; i < arr.length-1;i++){\r\n        let min = i;\r\n        for(let z = i +1; z < arr.length;z++){\r\n            if(arr[z] < arr[min])\r\n                min = z\r\n            let step = {bar1 : i, bar2 : z ,swap : 0, bars : [i,z]};\r\n            animation.push(step)\r\n        }\r\n        if(min !== i){\r\n            let temp = arr[min];\r\n            arr[min] = arr[i];\r\n            arr[i] = temp;\r\n            let step = {bar1 : min, bar2 : i ,swap : 1, bars : [i,min]};\r\n            animation.push(step)\r\n        }\r\n    }\r\n    return animation;\r\n}\r\n// -------------------------------------------------------------------------------------------\r\n\r\n//https://en.wikipedia.org/wiki/Gnome_sort\r\n// -------------------------------------------------------------------------------------------\r\nexport function gnomeSort (arr:number[]){\r\n    var animation : animationStep [] = [];\r\n    let pos = 0;\r\n    while (pos < arr.length){\r\n        let step = {bar1 : pos, bar2 : pos-1 ,swap : 0, bars : [pos,pos-1 >= 0 ? pos-1 : pos]};        \r\n        if (pos === 0 || arr[pos] >= arr[pos-1])\r\n            pos++;\r\n        else{\r\n            let temp = arr[pos];\r\n            arr[pos] = arr[pos-1];\r\n            arr[pos-1] = temp;\r\n            pos--;\r\n            step.swap = 1;\r\n        }\r\n        animation.push(step);\r\n    }\r\n    return animation;\r\n}\r\n// -------------------------------------------------------------------------------------------\r\n\r\n//https://en.wikipedia.org/wiki/Quicksort\r\n// -------------------------------------------------------------------------------------------\r\nexport function quickSort(arr:number[],low :number, high :number){\r\n    var animation : animationStep [] = [];\r\n    runQuickSort(arr,low,high,animation)\r\n    return animation;\r\n}\r\n\r\nfunction runQuickSort(arr:number[],low :number, high :number,animation : animationStep[]){\r\n    if(low < high){\r\n        let p : number = partition(arr,low,high,animation);\r\n        runQuickSort(arr,low,p,animation);\r\n        runQuickSort(arr,p+1,high,animation); \r\n    }\r\n}\r\n\r\n\r\n//https://www.geeksforgeeks.org/hoares-vs-lomuto-partition-scheme-quicksort/\r\n//Using hoares\r\nfunction partition(arr:number[],low:number,high:number,animation:animationStep[]){\r\n    // let pivot = arr[low]; \r\n    let index = Math.floor(low + (high - low) / 2);\r\n    let pivot = arr[index];\r\n    let i = low - 1;\r\n    let j = high + 1;\r\n    while(true){\r\n        do{\r\n            let step = {bar1 : i, bar2 : j ,swap : 0, bars : [i,j,index]};\r\n            animation.push(step);\r\n            i++;\r\n        }while(arr[i] < pivot)\r\n\r\n        do{\r\n            let step = {bar1 : i, bar2 : j ,swap : 0, bars : [i,j,index]};\r\n            animation.push(step);        \r\n            j--;\r\n        }while(arr[j] > pivot)\r\n        \r\n\r\n        let step = {bar1 : i, bar2 : j ,swap : 0, bars : [i,j,index]};\r\n        if(i >= j){\r\n            animation.push(step);  \r\n            return j\r\n        }\r\n        let temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n        step.swap = 1;\r\n        animation.push(step);  \r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n// -------------------------------------------------------------------------------------------\r\n\r\n\r\n","import React from 'react';\r\nimport './visualizerComponent.css'\r\nimport {\r\n  bubbleSort, \r\n  insertionSort,\r\n  selectionSort,\r\n  gnomeSort,\r\n  quickSort\r\n} from './sortingAlgorithms/algorithms'\r\n\r\n\r\nexport interface Props{\r\n  \r\n}\r\n\r\ninterface settings {\r\n  maxValue: number;\r\n  minValue: number;\r\n  arraySize: number;\r\n  barColor: string;\r\n  activeBarColor: string;\r\n  animationSpeed: number\r\n}\r\n\r\nexport interface animationStep{\r\n  bar1: number;\r\n  bar2: number;\r\n  bars: number[];\r\n  swap: number;\r\n}\r\n\r\n\r\n\r\nexport default class VisualizerComponent extends React.Component<{},{array : number[],timeouts : any[],isSorted : boolean}>{\r\n\r\n    private settings : settings = {\r\n      maxValue : 900,\r\n      minValue : 15,\r\n      arraySize: 200,\r\n      barColor: \"lightgreen\",\r\n      activeBarColor: \"red\",\r\n      animationSpeed: 1,\r\n    }\r\n    \r\n  \r\n\r\n    private animation : animationStep [] = [];\r\n\r\n    constructor(props:Props) {\r\n        super(props);\r\n        this.state = {\r\n          array : this.randomizeArray(),\r\n          timeouts : [],\r\n          isSorted : false\r\n        }\r\n    }\r\n      \r\n\r\n    //Randomize the values in array\r\n    randomizeArray(){\r\n      let newArray : number[] = [];\r\n      for(let i = 0; i < this.settings.arraySize;i++){\r\n        newArray.push(Math.floor(Math.random() * (this.settings.maxValue - this.settings.minValue)) + this.settings.minValue)\r\n      }\r\n      return newArray\r\n    }\r\n  \r\n    resetArray = () => {\r\n      while(this.state.timeouts.length !== 0){\r\n        clearTimeout(this.state.timeouts[0])\r\n        this.state.timeouts.shift();\r\n      }\r\n      this.resetBars()\r\n      this.setState({array:this.randomizeArray(),isSorted:false})\r\n    }\r\n\r\n    resetBars = () => {\r\n      let arraybars = document.getElementsByClassName(\"array-bar\") as HTMLCollectionOf<HTMLElement>;\r\n      for(let i = 0; i < arraybars.length;i++){\r\n        arraybars[i].style.backgroundColor = this.settings.barColor;\r\n      }\r\n    }\r\n\r\n    runAlgorithm = (algorithm : (arr:number[]) => any) =>{\r\n      if(this.state.timeouts.length === 0){\r\n        let copy = [...this.state.array]\r\n        this.animation = algorithm(copy)\r\n        this.runAnimation()\r\n        this.setState({isSorted:true})\r\n      }\r\n    }\r\n\r\n    runAnimation(){\r\n      let prevBar1 : number = -1;\r\n      let prevBar2 : number = -1;\r\n      let arraybars = document.getElementsByClassName(\"array-bar\") as HTMLCollectionOf<HTMLElement>;\r\n      for(let i = 0; i < this.animation.length;i++){\r\n        this.state.timeouts.push(setTimeout(()=>{\r\n          if(prevBar1 > -1 && prevBar1 < this.state.array.length) arraybars[prevBar1].style.backgroundColor = this.settings.barColor;\r\n          if(prevBar2 > -1 && prevBar2 < this.state.array.length) arraybars[prevBar2].style.backgroundColor = this.settings.barColor;\r\n          this.animation[i].bars.forEach((barID,idx) => {\r\n            if(barID < 0 || barID >= this.state.array.length || barID === undefined){\r\n              return;\r\n            }\r\n\r\n            if(idx === 2){\r\n              //Pivot\r\n              arraybars[barID].style.backgroundColor = \"rgb(\"+(255).toString()+\",255,255)\";\r\n            }else{\r\n              arraybars[barID].style.backgroundColor = this.settings.activeBarColor\r\n            }\r\n          });\r\n           \r\n          if(this.animation[i].swap === 1){\r\n\r\n            let newArray = this.state.array\r\n            let temp = newArray[this.animation[i].bar1]\r\n            newArray[this.animation[i].bar1] = newArray[this.animation[i].bar2]\r\n            newArray[this.animation[i].bar2] = temp\r\n           \r\n            this.setState({array : newArray})\r\n          }\r\n          \r\n          prevBar1 = this.animation[i].bar1\r\n          prevBar2 = this.animation[i].bar2       \r\n\r\n          this.state.timeouts.shift();\r\n          if(this.state.timeouts.length <= 0){\r\n            this.setState({isSorted:true})\r\n          }\r\n        }, i * this.settings.animationSpeed))\r\n      }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n      var list : number[] = this.state.array;\r\n      const pColor : string = this.settings.barColor;\r\n      let copy = [...this.state.array]\r\n\r\n      return <div>\r\n        <div className = \"array-container\">\r\n          {list.map((val,idx)=>(\r\n            <div\r\n              className = \"array-bar\"\r\n              key = {idx}\r\n              id = {idx.toString()}\r\n              style = {{\r\n                backgroundColor :`${pColor}`,\r\n                height : `${val}px`\r\n              }}></div>\r\n          ))}\r\n          </div>\r\n\r\n\r\n        <div className = \"button-container\">\r\n\r\n          <div className=\"dropup\">\r\n            <button className=\"dropbtn\">Algorithms</button>\r\n              <div className=\"dropup-content\">\r\n                  <button \r\n                    disabled = {this.state.isSorted} \r\n                    className=\"buttons\" \r\n                    onClick={() => {\r\n                      if(this.state.timeouts.length === 0){\r\n                        this.animation = bubbleSort(copy)\r\n                        this.runAnimation()\r\n                        this.setState({isSorted:true})\r\n                      }\r\n                  }}>Bubble Sort</button>\r\n                    \r\n                  <button \r\n                    disabled = {this.state.isSorted} \r\n                    className=\"buttons\" \r\n                    onClick={() => {\r\n                      if(this.state.timeouts.length === 0){\r\n                        this.animation = insertionSort(copy)\r\n                        this.runAnimation()\r\n                        this.setState({isSorted:true})\r\n                      }\r\n                  }}>Insertion Sort</button>\r\n\r\n                  <button \r\n                    disabled = {this.state.isSorted} \r\n                    className=\"buttons\" \r\n                    onClick={() => {\r\n                      if(this.state.timeouts.length === 0){\r\n                        this.animation = selectionSort(copy)\r\n                        this.runAnimation()\r\n                        this.setState({isSorted:true})\r\n                      }\r\n                  }}>Selection Sort</button>\r\n\r\n                   <button \r\n                    disabled = {this.state.isSorted} \r\n                    className=\"buttons\" \r\n                    onClick={() => {\r\n                      if(this.state.timeouts.length === 0){\r\n                        this.animation = gnomeSort(copy)\r\n                        this.runAnimation()\r\n                        this.setState({isSorted:true})\r\n                      }\r\n                  }}>Gnome Sort</button>\r\n\r\n                   <button \r\n                    disabled = {this.state.isSorted} \r\n                    className=\"buttons\" \r\n                    onClick={() => {\r\n                      if(this.state.timeouts.length === 0){\r\n                        this.animation = quickSort(copy,0,copy.length-1)\r\n                        this.runAnimation()\r\n                        this.setState({isSorted:true})\r\n                      }\r\n                  }}>Quicksort</button>\r\n                \r\n              </div> {/*dropup-content*/}\r\n            </div> {/*Dropup*/}\r\n\r\n\r\n            \r\n            <button id=\"resetBtn\" onClick={this.resetArray}>Reset Array</button>\r\n          </div>{/* Button Container */} \r\n\r\n      </div>\r\n    }\r\n}","import React from 'react';\nimport VisualizerComponent from './visualizer/visualizerComponent'\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n        <VisualizerComponent> </VisualizerComponent>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}